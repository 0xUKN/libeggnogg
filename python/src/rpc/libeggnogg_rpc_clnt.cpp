/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#include <memory.h> /* for memset */
#include "../../../include/libeggnogg_rpc.hpp"

namespace LibEggnogg
{

	/* Default timeout can be changed using clnt_control() */
	static struct timeval TIMEOUT = { 25, 0 };

	void *
	set_speed_3(u_long *argp, CLIENT *clnt)
	{
		static char clnt_res;

		memset((char *)&clnt_res, 0, sizeof(clnt_res));
		if (clnt_call (clnt, set_speed,
			(xdrproc_t) xdr_u_long, (caddr_t) argp,
			(xdrproc_t) xdr_void, (caddr_t) &clnt_res,
			TIMEOUT) != RPC_SUCCESS) {
			return (NULL);
		}
		return ((void *)&clnt_res);
	}

	u_long *
	get_speed_3(void *argp, CLIENT *clnt)
	{
		static u_long clnt_res;

		memset((char *)&clnt_res, 0, sizeof(clnt_res));
		if (clnt_call (clnt, get_speed,
			(xdrproc_t) xdr_void, (caddr_t) argp,
			(xdrproc_t) xdr_u_long, (caddr_t) &clnt_res,
			TIMEOUT) != RPC_SUCCESS) {
			return (NULL);
		}
		return (&clnt_res);
	}

	char **
	get_roomdef_3(void *argp, CLIENT *clnt)
	{
		static char *clnt_res;

		memset((char *)&clnt_res, 0, sizeof(clnt_res));
		if (clnt_call (clnt, get_roomdef,
			(xdrproc_t) xdr_void, (caddr_t) argp,
			(xdrproc_t) xdr_wrapstring, (caddr_t) &clnt_res,
			TIMEOUT) != RPC_SUCCESS) {
			return (NULL);
		}
		return (&clnt_res);
	}

	char **
	get_mapname_3(void *argp, CLIENT *clnt)
	{
		static char *clnt_res;

		memset((char *)&clnt_res, 0, sizeof(clnt_res));
		if (clnt_call (clnt, get_mapname,
			(xdrproc_t) xdr_void, (caddr_t) argp,
			(xdrproc_t) xdr_wrapstring, (caddr_t) &clnt_res,
			TIMEOUT) != RPC_SUCCESS) {
			return (NULL);
		}
		return (&clnt_res);
	}

	void *
	game_reset_3(void *argp, CLIENT *clnt)
	{
		static char clnt_res;

		memset((char *)&clnt_res, 0, sizeof(clnt_res));
		if (clnt_call (clnt, game_reset,
			(xdrproc_t) xdr_void, (caddr_t) argp,
			(xdrproc_t) xdr_void, (caddr_t) &clnt_res,
			TIMEOUT) != RPC_SUCCESS) {
			return (NULL);
		}
		return ((void *)&clnt_res);
	}
}
